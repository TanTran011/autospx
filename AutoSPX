#Persistent
#NoEnv
SetBatchLines, -1
Paused := False

; === Tạo GUI báo lỗi/thông báo có icon riêng ===
ShowMessage(title, message, type := "info") {
    iconPath := A_ScriptDir . "\e912c0d8d29c6dc2348d.ico"
    Gui, New
    Gui, +AlwaysOnTop +ToolWindow
    Gui, Add, Picture, w32 h32, %iconPath%
    Gui, Add, Text, x+10 yp w300, %message%
    Gui, Add, Button, gCloseMsg w80 Default, OK
    Gui, Show,, %title%
    return

    CloseMsg:
    GuiClose:
    GuiEscape:
    Gui, Destroy
    return
}

; === Kiểm tra quyền truy cập ===
if !CheckAuthorization() {
    ShowMessage("Cảnh báo", "Bạn không có quyền sử dụng phần mềm này!")
    ExitApp
}

; === Đổi icon phần mềm ===
iconPath := A_ScriptDir . "\e912c0d8d29c6dc2348d.ico"
if FileExist(iconPath) {
    Menu, Tray, Icon, %iconPath%
    Gui, +LastFound
    hGui := WinExist()
    SendMessage, 0x80, 0, DllCall("LoadImage"
        , "Ptr", 0
        , "Str", iconPath
        , "UInt", 1
        , "Int", 0
        , "Int", 0
        , "UInt", 0x10), , ahk_id %hGui%
}

; === Giao diện chính ===
Gui, Add, Edit, vUserInput w300 R10 Multi gUpdateLineCount
Gui, Add, Text, vLineCount w150, Số dòng: 0
Gui, Add, Edit, vSpeed w50 Number, 500
Gui, Add, Button, gClearOutput, Xóa Output
Gui, Add, Edit, vOutput w300 R10 Multi ReadOnly
Gui, Show, , SPX Express
return

UpdateLineCount:
GuiControlGet, UserInput,, UserInput
LineCount := 0
Loop, Parse, UserInput, `n, `r
{
    if (Trim(A_LoopField) != "")
        LineCount++
}
GuiControl,, LineCount, Số dòng: %LineCount%
return

F7::
Gui, Submit, NoHide
OutputText := ""
Loop, Parse, UserInput, `n, `r
{
    if (A_LoopField = "")
        Continue
    while Paused
        Sleep, 50
    SendInput, %A_LoopField%
    Send, {Enter}
    OutputText .= A_LoopField . "`n"
    GuiControl,, Output, %OutputText%
    Sleep, %Speed%
}
return

F8::
Paused := !Paused
return

ClearOutput:
GuiControl,, Output,
GuiControl,, LineCount, Số dòng: 0
return

GuiClose:
ExitApp

; === Kiểm tra quyền truy cập ===
CheckAuthorization() {
    AuthorizedUsers := GetAuthorizedUsers()
    EnvGet, CurrentUser, USERNAME
    ShowMessage("Tên người dùng", "User Name: " . CurrentUser)

    if (!IsObject(AuthorizedUsers) || AuthorizedUsers.Length() = 0) {
        ShowMessage("Lỗi", "Không tải được danh sách user hoặc danh sách rỗng.")
        return False
    }

    for index, user in AuthorizedUsers {
        if (Trim(user) = Trim(CurrentUser)) {
            ShowMessage("Xác nhận", "Bạn có quyền truy cập!")
            return True
        }
    }

    ShowMessage("Từ chối", "Vui lòng liên hệ Tân để được hỗ trợ!")
    return False
}

; === Lấy danh sách người dùng hợp lệ ===
GetAuthorizedUsers() {
    URL := "https://script.google.com/macros/s/AKfycby0Z-MPEwaL7NAW4ctnIKBg7g5QRo18XaZbEHs_Ym4o9lPhaysegDJS4DL5Y9RTRYhg5w/exec"
    WebRequest := ComObjCreate("WinHttp.WinHttpRequest.5.1")

    try {
        WebRequest.Open("GET", URL, False)
        WebRequest.Send()
        Users := WebRequest.ResponseText
        if (Users = "" || InStr(Users, "error")) {
            ShowMessage("Lỗi", "Không nhận được dữ liệu hợp lệ từ server.")
            return []
        }

        Users := RegExReplace(Users, "\[|\]|\r|\n|""", "")
        Users := RegExReplace(Users, ",\s+", ",")
        Users := Trim(Users)
        UserList := StrSplit(Users, ",")

        if (!IsObject(UserList) || UserList.Length() = 0) {
            ShowMessage("Lỗi", "Danh sách user rỗng hoặc không hợp lệ.")
            return []
        }

        return UserList
    } catch {
        ShowMessage("Lỗi", "Không thể kết nối để lấy danh sách user.")
        return []
    }
}
